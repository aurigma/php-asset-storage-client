<?php
/**
 * PrivateImagesApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\AssetStorage\Test\Api;

use \Aurigma\AssetStorage\Configuration;
use \Aurigma\AssetStorage\ApiException;
use \Aurigma\AssetStorage\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PrivateImagesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PrivateImagesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for privateImagesAddPreview
     *
     * Creates preview entity for specified source entity.
     *
     */
    public function testPrivateImagesAddPreview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesBatchCopy
     *
     * Copies selected entities and folders to another folder specified by path.
     *
     */
    public function testPrivateImagesBatchCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesBatchDelete
     *
     * Deletes selected entities and folders.
     *
     */
    public function testPrivateImagesBatchDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesBatchUpdateOwner
     *
     * Updates owner for selected entities and folders.
     *
     */
    public function testPrivateImagesBatchUpdateOwner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesBatchUpdateParentFolder
     *
     * Updates parent folder for selected entities and folders.
     *
     */
    public function testPrivateImagesBatchUpdateParentFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesCopy
     *
     * Copies specified entity.
     *
     */
    public function testPrivateImagesCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesCreate
     *
     * Creates new entity.
     *
     */
    public function testPrivateImagesCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesCreateCollection
     *
     * Creates new collection.
     *
     */
    public function testPrivateImagesCreateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesCreateFolder
     *
     * Creates new folder.
     *
     */
    public function testPrivateImagesCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesDelete
     *
     * Deletes specified entity.
     *
     */
    public function testPrivateImagesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesDeleteCollection
     *
     * Deletes specified collection.
     *
     */
    public function testPrivateImagesDeleteCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesDeleteFolder
     *
     * Deletes specified folder.
     *
     */
    public function testPrivateImagesDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGet
     *
     * Gets entity by id.
     *
     */
    public function testPrivateImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetAll
     *
     * Gets all entities relevant to specified query parameters.
     *
     */
    public function testPrivateImagesGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetAllCollections
     *
     * Gets all collections.
     *
     */
    public function testPrivateImagesGetAllCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetAllFolders
     *
     * Gets all folders.
     *
     */
    public function testPrivateImagesGetAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetCollection
     *
     * Gets collection content by collection id.
     *
     */
    public function testPrivateImagesGetCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetFile
     *
     * Gets entity file from file storage.
     *
     */
    public function testPrivateImagesGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetFolder
     *
     * Gets folder content by folder path.
     *
     */
    public function testPrivateImagesGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesGetFolderInfo
     *
     * Gets folder by id.
     *
     */
    public function testPrivateImagesGetFolderInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesUpdate
     *
     * Updates specified entity.
     *
     */
    public function testPrivateImagesUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesUpdateCollection
     *
     * Updates specified collection.
     *
     */
    public function testPrivateImagesUpdateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateImagesUpdateFolder
     *
     * Updates specified folder.
     *
     */
    public function testPrivateImagesUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
