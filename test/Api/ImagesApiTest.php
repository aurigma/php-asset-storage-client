<?php
/**
 * ImagesApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\AssetStorage\Test\Api;

use \Aurigma\AssetStorage\Configuration;
use \Aurigma\AssetStorage\ApiException;
use \Aurigma\AssetStorage\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ImagesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ImagesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for imagesAddPreview
     *
     * Creates preview entity for specified source entity.
     *
     */
    public function testImagesAddPreview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesBatchCopy
     *
     * Copies selected entities and folders to another folder specified by path.
     *
     */
    public function testImagesBatchCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesBatchDelete
     *
     * Deletes selected entities and folders.
     *
     */
    public function testImagesBatchDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesBatchUpdateParentFolder
     *
     * Updates parent folder for selected entities and folders.
     *
     */
    public function testImagesBatchUpdateParentFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesCopy
     *
     * Copies specified entity.
     *
     */
    public function testImagesCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesCreate
     *
     * Creates new entity.
     *
     */
    public function testImagesCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesCreateCollection
     *
     * Creates new collection.
     *
     */
    public function testImagesCreateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesCreateFolder
     *
     * Creates new folder.
     *
     */
    public function testImagesCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesDelete
     *
     * Deletes specified entity.
     *
     */
    public function testImagesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesDeleteCollection
     *
     * Deletes specified collection.
     *
     */
    public function testImagesDeleteCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesDeleteFolder
     *
     * Deletes specified folder.
     *
     */
    public function testImagesDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGet
     *
     * Gets entity by id.
     *
     */
    public function testImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetAll
     *
     * Gets all entities relevant to specified query parameters.
     *
     */
    public function testImagesGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetAllCollections
     *
     * Gets all collections.
     *
     */
    public function testImagesGetAllCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetAllFolders
     *
     * Gets all folders.
     *
     */
    public function testImagesGetAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetCollection
     *
     * Gets collection content by collection id.
     *
     */
    public function testImagesGetCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetFile
     *
     * Gets entity file from file storage.
     *
     */
    public function testImagesGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetFolder
     *
     * Gets folder content by folder path.
     *
     */
    public function testImagesGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesGetFolderInfo
     *
     * Gets folder by id.
     *
     */
    public function testImagesGetFolderInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesUpdate
     *
     * Updates specified entity.
     *
     */
    public function testImagesUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesUpdateCollection
     *
     * Updates specified collection.
     *
     */
    public function testImagesUpdateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for imagesUpdateFolder
     *
     * Updates specified folder.
     *
     */
    public function testImagesUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
