<?php
/**
 * TenantsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */
namespace Aurigma\AssetStorage\Test\Api;

require_once __DIR__.'/../../vendor/autoload.php';

use Jumbojett\OpenIDConnectClient;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Client;
use Aurigma\AssetStorage\HeaderSelector;
use Aurigma\AssetStorage\Configuration;
use Aurigma\AssetStorage\Api\TenantsApi;
use Aurigma\AssetStorage\Model\CreateTenantDto;
use Aurigma\AssetStorage\Model\UpdateTenantDto;
use Aurigma\AssetStorage\Test\TestConfig;
use PHPUnit\Framework\TestCase;

/**
 * TenantsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TenantsApiTest extends TestCase
{

    public TenantsApi $clientApi;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $client = new \GuzzleHttp\Client([
            // Base URI is used with relative requests
            'base_uri' => TestConfig::ASSET_STORAGE_API_URL,
            // You can set any number of default request options.
            'timeout'  => TestConfig::TIMEOUT,
            'verify' => TestConfig::VERIFY,
        ]);
        
        $selector = new HeaderSelector();
        $config = new Configuration();

        $config->setHost(TestConfig::ASSET_STORAGE_API_URL);
        $config->setApiKey('X-API-Key', TestConfig::ApiKey);
        $this->clientApi = new TenantsApi($client, $config, $selector);
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

     /**
     * Test case for tenantsGetAll
     *
     * Gets all tenants.
     *
     */
    public function testTenantsGetAll()
    {
        $response = $this->clientApi->tenantsGetAll();
        $filteredArray = array_filter($response->getItems(), fn ($value) => $value->getId() === TestConfig::TENANT_ID);
        $this->assertInstanceOf('Aurigma\AssetStorage\Model\PagedOfTenantDto', $response);
        $this->assertCount(1, $filteredArray);
    }

    /**
     * Test case for tenantsGet
     *
     * Gets tenant by id.
     *
     */
    public function testTenantsGet()
    {
        $response = $this->clientApi->tenantsGet(TestConfig::TENANT_ID);
        $this->assertInstanceOf('Aurigma\AssetStorage\Model\TenantDto', $response);
        $this->assertTrue($response->getId() === TestConfig::TENANT_ID);
    }

    /**
     * Test case for tenantsDelete
     *
     * Deletes specified tenant.
     *
     */
    public function testTenantsDelete()
    {
        $response = $this->clientApi->tenantsDelete(TestConfig::TENANT_ID);
        $this->assertInstanceOf('Aurigma\AssetStorage\Model\TenantDto', $response);
        $this->assertTrue($response->getId() === TestConfig::TENANT_ID);
    }

     /**
     * Test case for tenantsCreate
     *
     * Creates new tenant.
     *
     */
    public function testTenantsCreate()
    {
        $createData = new CreateTenantDto([
            'id' => TestConfig::TENANT_ID,
            'name' => TestConfig::TENANT_NAME."Created",
            'custom_fields' => (object) [],
        ]);
        $response = $this->clientApi->tenantsCreate($createData);
        $this->assertInstanceOf('Aurigma\AssetStorage\Model\TenantDto', $response);
        $this->assertTrue($response->getId() === TestConfig::TENANT_ID);
        $this->assertTrue($response->getName() === TestConfig::TENANT_NAME."Created");
    }


    /**
     * Test case for tenantsUpdate
     *
     * Updates specified tenant.
     *
     */
    public function testTenantsUpdate()
    {
        $customArray = [ 'key1' => 'value1', 'key2' => 'value2'];
        $objectCustom = json_decode(json_encode($customArray), false);
        $createData = new UpdateTenantDto([
            'name' => TestConfig::TENANT_NAME,
            'custom_fields' => $objectCustom,
        ]);
        $response = $this->clientApi->tenantsUpdate(TestConfig::TENANT_ID, $createData);
        $customFields = $response->getCustomFields();
        $this->assertInstanceOf('Aurigma\AssetStorage\Model\TenantDto', $response);
        $this->assertTrue($customFields['key1'] === 'value1' && $customFields['key2'] === 'value2');
        $this->assertTrue($response->getName() === TestConfig::TENANT_NAME);
    }
}
