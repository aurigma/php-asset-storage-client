<?php
/**
 * PrivateDesignsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\AssetStorage\Test\Api;

use \Aurigma\AssetStorage\Configuration;
use \Aurigma\AssetStorage\ApiException;
use \Aurigma\AssetStorage\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PrivateDesignsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PrivateDesignsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for privateDesignsAddPreview
     *
     * Creates preview entity for specified source entity.
     *
     */
    public function testPrivateDesignsAddPreview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsBatchCopy
     *
     * Copies selected entities and folders to another folder specified by path.
     *
     */
    public function testPrivateDesignsBatchCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsBatchDelete
     *
     * Deletes selected entities and folders.
     *
     */
    public function testPrivateDesignsBatchDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsBatchUpdateOwner
     *
     * Updates owner for selected entities and folders.
     *
     */
    public function testPrivateDesignsBatchUpdateOwner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsBatchUpdateParentFolder
     *
     * Updates parent folder for selected entities and folders.
     *
     */
    public function testPrivateDesignsBatchUpdateParentFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsCopy
     *
     * Copies specified entity.
     *
     */
    public function testPrivateDesignsCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsCreate
     *
     * Creates new entity.
     *
     */
    public function testPrivateDesignsCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsCreateCollection
     *
     * Creates new collection.
     *
     */
    public function testPrivateDesignsCreateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsCreateFolder
     *
     * Creates new folder.
     *
     */
    public function testPrivateDesignsCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsDelete
     *
     * Deletes specified entity.
     *
     */
    public function testPrivateDesignsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsDeleteCollection
     *
     * Deletes specified collection.
     *
     */
    public function testPrivateDesignsDeleteCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsDeleteFolder
     *
     * Deletes specified folder.
     *
     */
    public function testPrivateDesignsDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGet
     *
     * Gets entity by id.
     *
     */
    public function testPrivateDesignsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetAll
     *
     * Gets all entities relevant to specified query parameters.
     *
     */
    public function testPrivateDesignsGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetAllCollections
     *
     * Gets all collections.
     *
     */
    public function testPrivateDesignsGetAllCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetAllFolders
     *
     * Gets all folders.
     *
     */
    public function testPrivateDesignsGetAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetCollection
     *
     * Gets collection content by collection id.
     *
     */
    public function testPrivateDesignsGetCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetFile
     *
     * Gets entity file from file storage.
     *
     */
    public function testPrivateDesignsGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetFolder
     *
     * Gets folder content by folder path.
     *
     */
    public function testPrivateDesignsGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsGetFolderInfo
     *
     * Gets folder by id.
     *
     */
    public function testPrivateDesignsGetFolderInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsUpdate
     *
     * Updates specified entity.
     *
     */
    public function testPrivateDesignsUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsUpdateCollection
     *
     * Updates specified collection.
     *
     */
    public function testPrivateDesignsUpdateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for privateDesignsUpdateFolder
     *
     * Updates specified folder.
     *
     */
    public function testPrivateDesignsUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
