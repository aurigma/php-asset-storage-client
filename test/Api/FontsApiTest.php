<?php
/**
 * FontsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\AssetStorage\Test\Api;

use \Aurigma\AssetStorage\Configuration;
use \Aurigma\AssetStorage\ApiException;
use \Aurigma\AssetStorage\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FontsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FontsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for fontsAddPreview
     *
     * Creates preview entity for specified source entity.
     *
     */
    public function testFontsAddPreview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsBatchCopy
     *
     * Copies selected entities and folders to another folder specified by path.
     *
     */
    public function testFontsBatchCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsBatchDelete
     *
     * Deletes selected entities and folders.
     *
     */
    public function testFontsBatchDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsBatchUpdateParentFolder
     *
     * Updates parent folder for selected entities and folders.
     *
     */
    public function testFontsBatchUpdateParentFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsCopy
     *
     * Copies specified entity.
     *
     */
    public function testFontsCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsCreate
     *
     * Creates new entity.
     *
     */
    public function testFontsCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsCreateCollection
     *
     * Creates new collection.
     *
     */
    public function testFontsCreateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsCreateFolder
     *
     * Creates new folder.
     *
     */
    public function testFontsCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsDelete
     *
     * Deletes specified entity.
     *
     */
    public function testFontsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsDeleteCollection
     *
     * Deletes specified collection.
     *
     */
    public function testFontsDeleteCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsDeleteFolder
     *
     * Deletes specified folder.
     *
     */
    public function testFontsDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGet
     *
     * Gets entity by id.
     *
     */
    public function testFontsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetAll
     *
     * Gets all entities relevant to specified query parameters.
     *
     */
    public function testFontsGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetAllCollections
     *
     * Gets all collections.
     *
     */
    public function testFontsGetAllCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetAllFolders
     *
     * Gets all folders.
     *
     */
    public function testFontsGetAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetCollection
     *
     * Gets collection content by collection id.
     *
     */
    public function testFontsGetCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetFile
     *
     * Gets entity file from file storage.
     *
     */
    public function testFontsGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetFolder
     *
     * Gets folder content by folder path.
     *
     */
    public function testFontsGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsGetFolderInfo
     *
     * Gets folder by id.
     *
     */
    public function testFontsGetFolderInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsUpdate
     *
     * Updates specified entity.
     *
     */
    public function testFontsUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsUpdateCollection
     *
     * Updates specified collection.
     *
     */
    public function testFontsUpdateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fontsUpdateFolder
     *
     * Updates specified folder.
     *
     */
    public function testFontsUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
