<?php
/**
 * DataSetsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AssetStorage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\AssetStorage\Test\Api;

use \Aurigma\AssetStorage\Configuration;
use \Aurigma\AssetStorage\ApiException;
use \Aurigma\AssetStorage\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DataSetsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\AssetStorage
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DataSetsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for dataSetsBatchCopy
     *
     * Copies selected entities and folders to another folder specified by path.
     *
     */
    public function testDataSetsBatchCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsBatchDelete
     *
     * Deletes selected entities and folders.
     *
     */
    public function testDataSetsBatchDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsBatchUpdateParentFolder
     *
     * Updates parent folder for selected entities and folders.
     *
     */
    public function testDataSetsBatchUpdateParentFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsCopy
     *
     * Copies specified entity.
     *
     */
    public function testDataSetsCopy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsCreate
     *
     * Creates new entity.
     *
     */
    public function testDataSetsCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsCreateCollection
     *
     * Creates new collection.
     *
     */
    public function testDataSetsCreateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsCreateFolder
     *
     * Creates new folder.
     *
     */
    public function testDataSetsCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsDelete
     *
     * Deletes specified entity.
     *
     */
    public function testDataSetsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsDeleteCollection
     *
     * Deletes specified collection.
     *
     */
    public function testDataSetsDeleteCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsDeleteFolder
     *
     * Deletes specified folder.
     *
     */
    public function testDataSetsDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGet
     *
     * Gets entity by id.
     *
     */
    public function testDataSetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetAll
     *
     * Gets all entities relevant to specified query parameters.
     *
     */
    public function testDataSetsGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetAllCollections
     *
     * Gets all collections.
     *
     */
    public function testDataSetsGetAllCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetAllFolders
     *
     * Gets all folders.
     *
     */
    public function testDataSetsGetAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetCollection
     *
     * Gets collection content by collection id.
     *
     */
    public function testDataSetsGetCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetFile
     *
     * Gets entity file from file storage.
     *
     */
    public function testDataSetsGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetFolder
     *
     * Gets folder content by folder path.
     *
     */
    public function testDataSetsGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsGetFolderInfo
     *
     * Gets folder by id.
     *
     */
    public function testDataSetsGetFolderInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsUpdate
     *
     * Updates specified entity.
     *
     */
    public function testDataSetsUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsUpdateCollection
     *
     * Updates specified collection.
     *
     */
    public function testDataSetsUpdateCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataSetsUpdateFolder
     *
     * Updates specified folder.
     *
     */
    public function testDataSetsUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
